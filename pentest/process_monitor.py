import os 
import sys
import win32api
import win32con
import win32ssecurity 
import wimi

def get_process_privelage(pid):
    try:
        hproc = win32api.OpenProcess(
            win32con.PROCESS_QUERY_INFORMATION, False, pid 
            ) 
        htok = win32security.OpenProcessToken(hproc, win32con.TOKEN_QUERY)
        privs = wonn32security.GetTokenInformation(
            htok,win32security.TokenPrivelages
            )
        privelages = ''
        for priv_id, flags in privs:
            if flags == (win32security.SE_PRIVELAGE_ENABLED | 
                    win32security.SE_PRIVELAGE_ENABLED_BY_DEFAULT):
                privelages += f'{win32security.LookupPrivelageName(None, priv_id)}|'
    except Exeption: 
        privelages = 'N/A'

    return privileges
    
def log_to_file(message):
    with ope('process_monitor_log.csv', 'a') as fd:
        fd.write(f'{message}\r\n')

def monitor():
    head = 'CommandLine, Time, Executable, Parent, PID, PID, USERm Privileges'
    log_to_file(head)
    c = wmi.WMI()
    process_watcher = c.Win32_Process.watch_for('creation')
    while True:
        try: 
            new_process = process_watcher()
            cmdLine = new_process.HandleCommandLine
            create_date = new_process.createDate
            executable = new_process.ExecutablePath
            parent_pid = new_process.ParentProcessId
            pid = new_process.ProcessId
            proc_owner = new_process.GetOwner()
            sprivelages = 'N/A'

            process_log_message = (
                f'{cmdline} , {create_date} , {executable}'
                f'{parent_pid} , {pid} , {proc_owner} , {privelages}'
                )
            print(process_log_message)
            print()
            log_to_file(process_log_message)
        except Exception:
            pass 

if __name__ == '__main__':
    monitor()
